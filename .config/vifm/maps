" vim: filetype=vifm :

" basic {{{

map <Space> <Nop>
map ; <C-w>
map ;; <C-w> <C-w>
nmap ,<Space> :set hls!<CR>

" Display sorting dialog
nnoremap s :sort<CR>
nnoremap S :invert o<CR>

" Mappings for faster renaming
nnoremap I cw<C-a>
nnoremap A cw
nnoremap cn cw<C-u>
nnoremap cc :rename<CR>
noremap cr :rename!<CR>

map ,j :jobs<CR>
nmap g! :shell<CR>
nmap gr :!  %i &<C-b><M-b><C-b>

map ZX :qa<CR>

" }}}

" history {{{

map K :histnext<CR>
map J :histprev<CR>

map ,gh :history<CR>
map ,gd :history dir<CR>
map ,gc :history cmd<CR>
map ,gs :history search<CR>
map ,gS :history bsearch<CR>
map ,gi :history input<CR>
map ,ge :history expreg<CR>
map ,gf :history filter<CR>

" Not very sophisticated
map ,gu :pushd .<CR>
map ,gg :pushd %c<CR>
map ,gU :pushd<Space>
map ,gp :popd<CR>

" }}}

" settings {{{

nnoremap ,qw :set wrap!<cr>

" View like in ranger
noremap ,qv :set millerview!<CR>

nnoremap ,qs :set slowfs!<cr>

" }}}

" preview {{{

nnoremap w :view<cr>
vnoremap w :view<cr>gv

nmap W w<S-Tab>
vmap W w<S-Tab>

qmap w q
qmap W qw

" }}}

" splits {{{

map <C-w>d :vsplit .<CR>
map <C-w>D :split .<CR>

" original tab is nice, but had to be sacrificed
noremap <C-h> <Tab>
map <Tab><Tab> <C-h>
noremap <BS> <Tab>
map <Tab><Tab> <BS>

" }}}

" tabs {{{

" Freeing tab
map <Tab><ESC> <nop><ESC>

map <Tab>o :tabnew<CR>
map <Tab>d :tabclose<CR>
map <Tab>x :tabonly<CR>
map <Tab>n :tabname<Space>
map <Tab>N :tabname<CR>

noremap <silent> <Tab>h gT
noremap <silent> <Tab>l gt
map <silent> <Tab>m :tabmove<Space>

" }}}

" command line {{{

" alt backspace won't work
cnoremap <M-h> <M-b><M-d>

" }}}

" gui fm {{{

" Sometimes may be needed for gui operations
map gms :!pcmanfm %i &<CR>
map gmS :!pcmanfm &<CR>
map gmd :!pcmanfm %d %D %i &<CR>
map gmD :!pcmanfm %d %D &<CR>

" }}}

" external commands {{{

" Open terminal in current directory {{{

nnoremap ,tt :!st %i &<cr>
nnoremap ,tT :!st &<cr>

nnoremap ,ts :!st %i &<cr>
nnoremap ,tS :!st &<cr>

" alacw is alacritty using client-server,
" should be available in system
nnoremap ,ta :!alacw %i &<cr>
nnoremap ,tA :!alacw &<cr>

nnoremap ,tb :!alacritty %i &<cr>
nnoremap ,tb :!alacritty &<cr>

nnoremap ,tu :!urxvt %i &<cr>
nnoremap ,tU :!urxvt &<cr>

nnoremap ,tx :!urxvt %i &<cr>
nnoremap ,tX :!urxvt &<cr>

nnoremap ,tx :!qterminal %i &<cr>
nnoremap ,tX :!qterminal &<cr>

" }}}

" Open file in the background using its default program {{{

map go :file<CR>
map gO :file &<CR>

" }}}

" copying {{{

map gcb :!cp -n %f %D &<CR>
map gcB :!cp %f %D &<CR>
map gcr :!rsync %f %D &<CR>
map gcR :!rsync -a %f %D &<CR>

map gcc :!cp %f %D &<M-b><M-b><M-b>

" TODO more rsyncs I guess

" }}}

" other {{{

" ga exists, but whatever
map ,qd :echo system("du -sh ".expand("%f"))<CR>

" }}}

" }}}

" custom commands {{{

map ,qf :df<CR>
map ,qi :fi<CR>
map ,qp :bls<CR>
map ,qa :blm<CR>

" }}}

" copying paths to system clipboard {{{

" Copying paths (copied from wiki)
if has('win')
" {{{

    " yank current directory path to Windows clipboard with forward slashes
    nnoremap ypp :!echo %"d:gs!\!/!%i| clip<cr>

    " yank current directory path to Windows clipboard with backward slashes
    nnoremap ypP :!echo %"d%i| clip<cr>

    " yank path to current file to Windows clipboard with forward slashes
    nnoremap ypf :!echo %"c:gs!\!/!%i| clip<cr>

    " yank path to current directory to Windows clipboard with backward slashes
    nnoremap ypF :!echo %"c%i| clip<cr>

    " yank current filename without path to Windows clipboard
    nnoremap ypn :!echo %"c%i| clip<cr>

    " yank root of current file's name to Windows clipboard
    nnoremap ypr :!echo %"c:r%i| clip<cr>

" }}}
elseif executable('xclip')
" {{{

    " yank current directory path into the clipboard
    nnoremap ypd :!echo -n %d | xclip -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

    " yank current file path into the clipboard
    nnoremap ypf :!echo -n %c:p | xclip -selection clipboard %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

    " yank current filename without path into the clipboard
    nnoremap ypn :!echo -n %c | xclip -selection clipboard %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

    " yank root of current file's name into the clipboard
    nnoremap ypr :!echo -n %c:r | xclip -selection clipboard %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" }}}
elseif executable('xsel')
" {{{

    " yank current directory path into primary and selection clipboards
    nnoremap ypd :!echo -n %d | xsel --input --primary %i &&
                \ echo -n %d | xsel --clipboard --input %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

    " yank current file path into primary and selection clipboards
    nnoremap ypf :!echo -n %c:p | xsel --input --primary %i &&
                \ echo -n %c:p | xsel --clipboard --input %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

    " yank current filename without path into primary and selection clipboards
    nnoremap ypn :!echo -n %c | xsel --input --primary %i &&
                \ echo -n %c | xsel --clipboard --input %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

    " yank root of current file's name into primary and selection clipboards
    nnoremap ypr :!echo -n %c:r | xsel --input --primary %i &&
                \ echo -n %c:r | xsel --clipboard --input %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" }}}
elseif executable('pbcopy')
" {{{

    " yank current directory path into the clipboard
    nnoremap ypd :!echo -n %d | pbcopy %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

    " yank current file path into the clipboard
    nnoremap ypf :!echo -n %c:p | pbcopy %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

    " yank current filename without path into the clipboard
    nnoremap ypn :!echo -n %c | pbcopy %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

    " yank root of current file's name into the clipboard
    nnoremap ypr :!echo -n %c:r | pbcopy %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" }}}
endif

" }}}

" drag and drop {{{

nnoremap ,dy :exe '!dragon --on-top --and-exit %c & ontop'<CR>
nnoremap ,dY :exe '!dragon --on-top %c & ontop'<CR>

vnoremap ,dy :exe '!dragon --all-compact --on-top --and-exit %f & ontop'<CR>
vnoremap ,dY :exe '!dragon --all-compact --on-top %f & ontop'<CR>

noremap ,da :exe '!dragon --on-top * .* & ontop'<CR>

noremap ,dp :exe '!dragon --target --on-top --and-exit 2>/dev/null | ucopy %d & ontop'<CR>
noremap ,dP :exe '!dragon --target --on-top 2>/dev/null | ucopy %d & ontop'<CR>
noremap ,dc :exe '!dragon --target --on-top --keep 2>/dev/null | ucopy %d & ontop'<CR>

noremap ,ds :exe '!dragon --target --on-top --and-exit 2>/dev/null | ucopys %d & ontop'<CR>
noremap ,dS :exe '!dragon --target --on-top 2>/dev/null | ucopys %d & ontop'<CR>
noremap ,dC :exe '!dragon --target --on-top --keep 2>/dev/null | ucopys %d & ontop'<CR>

" }}}

" FZF {{{

noremap ,sl :FZFlocate<CR>
noremap ,sr :FZFrun<CR>
noremap ,sg :FZFgo<CR>
noremap ,sd :FZFdir<CR>
noremap ,sf :FZFfind<CR>

noremap ,s<Space>l :FZFlocate<Space>
noremap ,s<Space>r :FZFrun<Space>
noremap ,s<Space>g :FZFgo<Space>
noremap ,s<Space>d :FZFdir<Space>
noremap ,s<Space>f :FZFfind<Space>

" }}}

" paths {{{

map gpp :cd ..<CR>
map gp1 :cd ..<CR>
map gp2 :cd ../..<CR>
map gp3 :cd ../../..<CR>
map gp4 :cd ../../../..<CR>
map gp5 :cd ../../../../..<CR>
map gp6 :cd ../../../../../..<CR>
map gp7 :cd ../../../../../../..<CR>
map gp8 :cd ../../../../../../../..<CR>
map gp9 :cd ../../../../../../../../..<CR>

" }}}

" bookmarks {{{

map <Space>jl :bmarks<CR>
map <Space>jo :bmgo<Space>
map <Space>ja :bmark<Space>
map <Space>jA :bmark!<Space>
map <Space>jd :delbmarks<Space>
map <Space>jD :delbmarks!<Space>

" }}}

" info {{{

map <Space>im :marks<CR>
map <Space>is :messages<CR>

" }}}

" TODO B gvim (i don't even have gvim lol) {{{

" Open file in existing instance of gvim
nnoremap o :!gvim --remote-tab-silent %f<cr>
" Open file in new instance of gvim
nnoremap O :!gvim %f<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>
" Open gvim to edit vifmrc
nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" }}}

" examples {{{

"" Example of standard two-panel file managers mappings
"nnoremap <f3> :!less %f<cr>
"nnoremap <f4> :edit<cr>
"nnoremap <f5> :copy<cr>
"nnoremap <f6> :move<cr>
"nnoremap <f7> :mkdir<space>
"nnoremap <f8> :delete<cr>

"" Midnight commander alike mappings
"" Open current directory in the other pane
"nnoremap <M-i> :sync<cr>
"" Open directory under cursor in the other pane
"nnoremap <M-o> :sync %c<cr>
"" Swap panes
""nnoremap <c-u> <c-w>x

" }}}
