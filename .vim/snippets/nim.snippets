snippet proc
    proc ${1:name}(${2:args}): ${3:type} = ${0:discard}

snippet func
    func ${1:name}(${2:args}): ${3:type} = ${0:discard}

snippet sproc
    proc ${1:name}(${2:args}): ${3:type} {.raises: [].} =
        ${0:discard}

snippet template
    template ${1:name}(${2:args}): ${3:type} = ${4:discard}

snippet simport
    import std/${1:module}

snippet import
    import ${1:module}

snippet importq
    from ${1:module} import nil

snippet importn
    from ${1:module} import ${2:names}

snippet closure
    (${1:args}) => ${0:discard}

snippet starter
    import std/sugar
    import std/strutils
    import std/sequtils

snippet disc
    discard ${0}

snippet noraise
    {.push raises: [].}
