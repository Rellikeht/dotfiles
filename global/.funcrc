#!/bin/sh

# ============================================================
# 						HELPERS
# ============================================================

dir_arg () {
	if [ -z "$1" ]
	then
		echo "."
	else
		echo "$1"
	fi
}

find_command ()
{
    local SWITCH ALL DIR PATTERN
    SWITCH="$1"
    ALL="$2"
    DIR=.
    shift 2

    if [ -d "$1" ]
    then
        DIR="$1"
        shift
    fi

    if [ -n "$1" ]
    then
        PATTERN="$ALL$1$ALL"
        shift
    else
        PATTERN="$ALL"
    fi

    find_system_special "$DIR" "$SWITCH" "$PATTERN" $@
}

noerr () {
    "$@" 2>/dev/null
}

silent () {
    noerr "$@" >/dev/null
}

dirf () {
	local D
	D=$(dir_arg "$1")
	noerr find_system_special "$D" -maxdepth 2 -type d -a \
		-regex "${D%/}(/[^.][^/]*)*" | \
		fzy
}

dirfv () {
	local D
	D=$(dir_arg "$1")
	noerr find_system_special "$D" -type d | fzy
}

dirfv2 () {
	local D
	D=$(dir_arg "$1")
	noerr find_system_special "$D" -maxdepth 2 -type d | fzy
}

alias dirfp='dirf ..'

# ============================================================
# 						MAINS
# ============================================================

lh () {
    if [ -n "$1" ]
    then
	    ls -t | sed "$1q"
    else
	    ls -t | sed 12q
    fi
}

cdc () {
    [ -d "$1" ] && cd "$1"
	clear
}

cdl () {
    cdc "$1"
	ls
}

cdll () {
    cdc "$1"
	ll
}

llh () {
    ll "$1" | head
}

maxe () {
    if [ -n "$2" ]
    then
	    cmds="$2"
	    prec="$1"
    else
	    cmds="$1"
	    prec=20
    fi
    str=$(echo -n $cmds | sed -z 's/[^;$\n]$/\0;/')
    maxima --very-quiet --batch-string="fpprec:$prec \$ fpprintprec:$prec \$ $str quit();" | \
	sed -z 's/load[^\n]*\n[^\n]*\n//g' | \
	egrep '^[ 	]|\$|b0$|]$'
}

gple () {
    gpe "plot '$1' using $2 w l"
}

edt () {
    if [ -n "$2" ]
    then
	    $1 "$@"
    else
	    svim "$1"
    fi
}

eal () {
    edt $1 /etc/.aliasrc
}

efn () {
    edt $1 /etc/.funcrc
}

evr () {
    edt $1 /etc/.varrc
}

fec () {
    if [ -n "$1" ]
    then
	    edt="$1"
    else
	    edt='vim'
    fi

    if [ -n "$2" ]
    then
	    comm="$2"
    else
	    comm=$(lsn | fzf)
    fi

    $edt $comm
}

fe () {
    fec "$1" "find -type f | fzf"
}

fed () {
    fec "$1"
}

dis () {
    silent "$@" &
    disown
}

bins () {
    pfl "$@" | egrep $(echo "$PATH" | sed 's/:/|/g')
}

if [ $(uname) = "FreeBSD" ]
then

    find_system_special () {
        find -E "$@" # TODO
    }

    TOUCHPAD_CMD='doas sysctl hw.psm.synaptics.touchpad_off'
    ttgl () {
        if [ $(sysctl -n hw.psm.synaptics.touchpad_off) == 0 ]
        then $TOUCHPAD_CMD=1 > /dev/null
        else $TOUCHPAD_CMD=0 > /dev/null
        fi
    }

    hm () {
        #local F
        #F=$(mktemp)
        #help2man $@ > "$F"
        #man "$F"
        #rm "$F"
        help2man $@ | mandoc | less
    }

    #hms () {
    #    help2man --no-discard-stderr $@ | man /dev/stdin
    #}

else

    find_system_special () {
        local D
        D="$1"
        shift
        find "$D" -regextype posix-extended $@
    }

    wat () {
        local WTIME COMMAND
        #if [ -n "$1" ]
        if [ "$1" -gt 0 ] 2>/dev/null
        then
            WTIME="$1"
            shift
        else
            WTIME=1
            COMMAND="$@"
        fi
        watch -n "$WTIME" -d "$@"
    }

    watc () {
	local T
	T="$1"
	shift
	wat "$T" -c "$@"
    }

    hm () {
        help2man $@ | man /dev/stdin
    }

    #hms () {
    #    help2man --no-discard-stderr $@ | man /dev/stdin
    #}

fi

hms () {
    hm --no-discard-stderr $@
}

fnd() {
    find_command -name '*' $@
}

fndi() {
    find_command -iname '*' $@
}

fnds () {
    find_command -regex '.*' $@
}

fndr () {
    find_command -iregex '.*' $@
}

fnde () {
    find_command -name '' $@
}

fndie () {
    find_command -name '' $@
}

fndse () {
    find_command -regex '' $@
}

fndre () {
    find_command -regex '' $@
}

ariad () {
    local FILE

    if [ -f "$1" ]
    then
        FILE="$(pwd)/$1"
    else
        FILE="$1"
    fi

    aria -D -d $(pwd) "$FILE" $@
}

if ! which which | grep 'built-in' > /dev/null
then
    WHICH_PROGRAM=$(which which)
    which_helper () {
        # ! $WHICH_PROGRAM $@ 2>/dev/null && alias $@
        # TODO functions
        [ $# -gt 0 ] && ! alias $@ 2>/dev/null && $WHICH_PROGRAM $@
    }
    alias which=which_helper
fi
